# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
# https://github.com/huezo
# Victor H. <huezohuezo.1990@gmail.com>
# Victor H. <huezohuezo.1990@gmail.com>

trigger:
- master

pool:
  name: Default

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: DevOps
  displayName: Docker image
  jobs:
  - job: DevOps
    displayName: DevOps
#    pool:
#      vmImage: ubuntu-latest
#    pool:
#      name: Default
    steps:
#    - task: Docker@2
#      displayName: Build an image
#      inputs:
#        command: 'build'
#        Dockerfile: '**/Dockerfile'
#        tags: '$(tag)'

    - task: Bash@3
      displayName: Test
      inputs:
        targetType: 'inline'
        script: |
          # 
          git clone https://github.com/Alagant/libreclinica-qa.git
          ls -ltra
          ls -ltra libreclinica-qa/
          cd libreclinica-qa/
          echo pwda
          pwd
          docker compose -f docker-compose.yml build
          echo next
          docker compose -f docker-compose.yml up
          echo 'Hello Test'
      env:
        CONFLUENCE_USERNAME: $(CONFLUENCE_USERNAME)
        CONFLUENCE_ACCESS_TOKEN: $(CONFLUENCE_ACCESS_TOKEN)
        CONFLUENCE_SPACE_ID: $(CONFLUENCE_SPACE_ID)
        CONFLUENCE_PAGEID: $(CONFLUENCE_PAGEID)
        LC_ROOT_USERNAME: $(LC_ROOT_USERNAME)
        LC_ROOT_PASSWORD: $(LC_ROOT_PASSWORD)
        source_version: $(Build.SourceVersion)
        build_id: $(Build.BuildId)
        build_number: $(Build.BuildNumber)
        commit_message: $(Build.SourceVersionMessage)
    - task: Bash@3
      displayName: DevOps
      inputs:
        targetType: 'inline'
        script: |
          # Docker DevOps
          docker build --no-cache --tag libreclinica:master .
          docker rm -f libreclinica
          docker run -d --name libreclinica -p 8183:8080 libreclinica:master
          docker ps --filter name=libreclinica
          echo 'Hello DevOps'
          ls -ltra
        #  docker service rm libreclinica
        #  docker service create --name=libreclinica --restart-condition=any --publish=8183:8080 --hostname=localhost libreclinica:master
        #  docker service ps  libreclinica

    - task: Bash@3
      displayName: Dockerless
      inputs:
        targetType: 'inline'
        script: |
          # 
          git clone https://github.com/Alagant/libreclinica-qa.git
          ls -ltra
          ls -ltra libreclinica-qa/
          python -m venv .venv
          .venv/bin/python -mpip install --upgrade pip
          .venv/bin/python -mpip install -r libreclinica-qa/requirements.txt
          source .venv/bin/activate
          cd libreclinica-qa/
          pwd
          python -m src.utils.commit_to_pdf $(Build.SourceVersion) $(Build.BuildId) $(Build.BuildNumber) $(Build.SourceVersionMessage)
          #python -m upload_report


    - task: GitHubRelease@1
      displayName: GitHub Release
      inputs:
        gitHubConnection: 'Lucioric2000 (1)'
        repositoryName: 'Alagant/LibreClinica'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'userSpecifiedTag'
        tag: '$(Build.BuildId)'
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'commitBased'

    - task: Bash@3
      displayName: Clean
      inputs:
        targetType: 'inline'
        script: |
          # 
          rm -rf _work
          rm -rf .venv